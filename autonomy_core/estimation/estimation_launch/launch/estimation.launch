<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="robot" default="$(optenv ROBOT_NAME quadrotor)"/>
    <arg name="cam0" default="cam_left"/>
    <arg name="cam1" default="cam_right"/>
    <arg name="image" default="image_raw"/>
    <arg name="imu" default="imu"/>
    <arg name="mag" default="mag"/>
    <arg name="output_odom" default="ukf_odom"/>
	<arg name="robot_frame_id" default="$(arg robot)"/>
  <!-- This frame_id should be the frame_id of the imu used for S-MSCKF	 -->
	<arg name="vio_imu_frame_id" default="$(arg robot)/stereo_rig_imu"/>
	<arg name="vio_ref_frame_id" default="$(arg robot)/odom"/>
	<arg name="ukf_ref_frame_id" default="$(arg robot)/odom"/>
  <!-- This should be set true for simulation -->
	<arg name="publish_body_camera_tf" default="false"/>
  <!-- This should be set false for simulation -->
  <arg name="publish_odom_tf" default="true"/>

    <!-- Use msckf_calib_gen to generate this yaml file when using unity sim -->
    <arg name="calibration_file" default="$(find estimation_launch)/config/msckf_calib.yaml"/>

    <group ns="$(arg robot)">
        <!-- Image Processor Nodelet  -->
        <include file="$(find estimation_launch)/launch/msckf_imgproc.launch">
            <arg name="calibration_file" value="$(arg calibration_file)"/>
            <arg name="imu" value="$(arg imu)"/>
            <arg name="cam0" default="$(arg cam0)"/>
            <arg name="cam1" default="$(arg cam1)"/>
            <arg name="image" default="$(arg image)"/>
        </include>
        <!-- Msckf Filter Nodelet -->
        <include file="$(find estimation_launch)/launch/msckf_vio.launch">
            <arg name="calibration_file" value="$(arg calibration_file)"/>
            <arg name="imu" value="$(arg imu)"/>
		    <!-- fixed reference frame for vio -->
            <arg name="fixed_frame_id" value="$(arg vio_ref_frame_id)"/>
            <arg name="child_frame_id" value="$(arg vio_imu_frame_id)"/>
        </include>

		<!-- UKF Nodelet -->
		<node pkg="nodelet" type="nodelet" name="fla_ukf" args="standalone fla_ukf/FLAUKFNodelet" clear_params="true" output="screen">
		  <rosparam file="$(find estimation_launch)/config/ukf_params.yaml"/>
		  <remap from="~imu" to="$(arg imu)"/>
		  <remap from="~mag" to="$(arg mag)"/>
		  <remap from="~height" to="mavros/distance_sensor/lidarlite_pub"/>
		  <remap from="~vio_odom" to="vio/odom"/>
		  <remap from="~odom_out" to="$(arg output_odom)"/>
		  <!-- fixed reference frame for ukf -->
		  <param name="world_frame_id" value="$(arg ukf_ref_frame_id)"/>
		  <param name="robot_frame_id" value="$(arg robot_frame_id)"/>
		  <param name="cam_frame_id" value="$(arg vio_imu_frame_id)"/>
		  <!-- fixed reference frame for vio -->
		  <param name="vision_frame_id" value="$(arg vio_ref_frame_id)"/>
		  <param name="enable_laser" value="false"/>
		  <param name="enable_cam" value="false"/>
		  <param name="enable_velodyne" value="false"/>
		  <param name="enable_gps" value="false"/>
		  <param name="enable_height" value="false"/>
		  <param name="enable_mag" value="false"/>
		  <param name="enable_vio_odom" value="true"/>
		  <param name="enable_yaw" value="false"/>
          <param name="publish_tf" value="$(arg publish_odom_tf)"/>     
    </node>
   </group>

   <!-- only necessary for simulation (for real world experiment is handled in publish_tf.launch) -->
   <!-- stereo-inertial system imu frame to body frame transform -->
   <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg robot)_imu_body_tf" args="0 0 0 0 0 0 $(arg robot_frame_id) $(arg vio_imu_frame_id)" if="$(arg publish_body_camera_tf)"/>


</launch>
