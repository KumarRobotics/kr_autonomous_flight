<?xml version="1.0" encoding="UTF-8"?>
<launch>


  <arg name="takeoff_node_start_delay" default="10.0" />  
  <arg name="robot" default="quadrotor" />  
  <arg name="use_3d" default="false" />  
  <arg name="odom" default="/unity_command/ground_truth/$(arg robot)/odom" />
  <arg name="use_lauras" default="false" />
  <arg name="launch_unity" default="true" />
  <arg name="mapper_config" value="$(find map_plan_launch)/config/mapper_3d.yaml" if="$(arg use_3d)"/>
  <arg name="planner_config" value="$(find control_launch)/config/tracker_params_mp_3d.yaml" if="$(arg use_3d)"/>
  <arg name="mapper_config" value="$(find map_plan_launch)/config/mapper.yaml" unless="$(arg use_3d)"/>
  <arg name="planner_config" value="$(find control_launch)/config/tracker_params_mp.yaml" unless="$(arg use_3d)"/>

    
  <!-- <arg name="param_file" value="$(find arl_unity_ros)/config/polypixel.yaml"/> -->
  <!-- <arg name="param_file" default="$(find arl_unity_ros)/config/overpasscity.yaml"/> -->
  <!-- <arg name="param_file" default="$(find arl_unity_ros)/config/floodedgrounds.yaml"/> -->
  <!-- <arg name="param_file" default="$(find arl_unity_ros)/config/basic_environment.yaml"/> -->
  <include file="$(find dcist_utils)/launch/sim/sim_quad_polypixel.launch">
    <arg name="robot" value="$(arg robot)" />
    <arg name="odom" value="$(arg odom)" />
    <arg name="launch_unity" value="$(arg launch_unity)" />
    <!-- <arg name="param_file" value="$(arg param_file)" /> -->
  </include>


  <group ns="$(arg robot)" if="$(arg use_lauras)">
      <node pkg="motion_primitives"
        type="planning_server.py"
        name="local_plan_server"
        output="screen">
        <rosparam file="$(find control_launch)/config/tracker_params_mp.yaml"/>
        <remap from="voxel_map" to="mapper/local_voxel_map"/>
      </node>
  </group>


     <include file="$(find state_machine_launch)/launch/system_mp.launch">
        <arg name="robot" value="$(arg robot)" />
        <arg name="takeoff_height" value="8" />
        <arg name="use_lauras" value="$(arg use_lauras)" />
        <arg name="lidar_cloud_topic" value="fake_lidar/points" />
    	<arg name="mapper_config" value="$(arg mapper_config)"/>
    	<arg name="planner_config" value="$(arg planner_config)"/>
     </include>
  
  <include file="$(find fake_lidar)/launch/fake_lidar_cloud.launch">
	  <arg name="robot" value="$(arg robot)"/> 
  </include>
  
  <include file="$(find client_launch)/launch/client.launch">
	  <arg name="robot" value="$(arg robot)"/> 
  </include>

  <node name="robot" pkg="arl_unity_ros_air" type="rosflight_offboard.py" ns="$(arg robot)" output="screen" launch-prefix="bash -c 'sleep $(arg takeoff_node_start_delay); $0 $@' " />
</launch>
