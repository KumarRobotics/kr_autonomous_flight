<library path="lib/libaction_line_tracker_distance">
  <class name="action_trackers/ActionLineTrackerDistance" type="ActionLineTrackerDistance" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which follows a line from the current position to a given goal position using distance and uses actionlib to monitor its status.
    </description>
  </class>
</library>

<library path="lib/libaction_line_tracker_jerk">
  <class name="action_trackers/ActionLineTrackerJerk" type="ActionLineTrackerJerk" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which follows a line from the current position to a given goal position using minimum jerk and uses actionlib to monitor its status.
    </description>
  </class>
</library>

<library path="lib/libaction_smooth_vel_tracker">
  <class name="action_trackers/ActionSmoothVelTracker" type="SmoothVelTracker" base_class_type="kr_trackers_manager::Tracker">
    <description>
      James's wind effect thing ported to action tracker
    </description>
  </class>
</library>

<library path="lib/libaction_trajectory_tracker">
  <class name="action_trackers/ActionTrajectoryTracker" type="ActionTrajectoryTracker" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which runs a trajectory action generated by planning server.  
    </description>
  </class>
</library>

<library path="lib/libaction_path_tracker">
  <class name="action_trackers/ActionPathTracker" type="ActionPathTracker" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which runs a trajectory action generated by planning server.  
    </description>
  </class>
</library>

<library path="lib/libfall_catcher">
  <class name="action_trackers/FallCatcher" type="FallCatcher" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which detects when the robot is in free fall and stablelizes out of it.
    </description>
  </class>
</library>

<library path="lib/libstopping_policy">
  <class name="action_trackers/StoppingPolicy" type="StoppingPolicy" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which detects when the robot is in free fall and stablelizes out of it.
    </description>
  </class>
</library>

<library path="lib/libtake_off_tracker">
  <class name="action_trackers/TakeOffTracker" type="TakeOffTracker" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which takes the robot off the ground better than line tracker. It also sasses you if you missuse it.
    </description>
  </class>
</library>

<library path="lib/libland_tracker">
  <class name="action_trackers/LandTracker" type="LandTracker" base_class_type="kr_trackers_manager::Tracker">
    <description>
      This is a controller which lands the robot regardless of bad mass / wind.
    </description>
  </class>
</library>
